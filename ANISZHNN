 int main()
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <string.h>

#define HIGHEST_CAR 12
#define BUFFER_AREA 100

int car_num = 0;
int child_pids[HIGHEST_CAR];
int pipe_fd[HIGHEST_CAR][1];
void sigint_handler(int signum)
{
printf("The process was interrupted!\n");

for (int i = 0; i < car_num; i++)
{
close(pipe_fd[i][0]);
close(pipe_fd[i][1]);
kill(child_pids[i], SIGTERM);
}
exit(signum);
}

void child_handler(int index)
{
char buffer[BUFFER_AREA];
close(pipe_fd[index][1]);

while (1)
{
read(pipe_fd[index][0], buffer, BUFFER_AREA);
printf("Message was received in the process %d: %s", index+1, buffer);
}
}

int main()
{
char buffer[BUFFER_AREA];
signal(SIGINT, sigint_handler);

while (1)
{
printf("Enter your car type: ");
fgets(buffer, BUFFER_AREA, stdln);
buffer[strcspn(buffer, "\n")] = '\0';

for (int i = 0; i < car_num; i++)
{
write(pipe_fd[i][1], buffer, strlen(buffer)+1);
}
}
for (int i = 0; i < car_num; i++)
{
close(pipe_fd[i][0]);
close(pipe_fd[i][1]);
}
return 0;
}
